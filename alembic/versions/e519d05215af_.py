"""empty message

Revision ID: e519d05215af
Revises: 297c1b7cfcf4
Create Date: 2022-07-06 09:08:03.092368

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e519d05215af'
down_revision = '297c1b7cfcf4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('curp_verifications',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('curp', sa.String(length=255), nullable=True),
    sa.Column('sex', sa.String(length=30), nullable=True),
    sa.Column('nationality', sa.String(length=30), nullable=True),
    sa.Column('result', sa.String(length=255), nullable=True),
    sa.Column('renapo_valid', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('paternal_surname', sa.String(length=255), nullable=True),
    sa.Column('mothers_maiden_name', sa.String(length=255), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('entity_birth', sa.String(length=10), nullable=True),
    sa.Column('probation_document', sa.String(length=5), nullable=True),
    sa.Column('probation_document_data', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('status_curp', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('id_ocr_confidences',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('overall_value', sa.String(length=10), nullable=True),
    sa.Column('overall_status', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('id_validations',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('photo_security_and_quality', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('id_specific', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('overall_value', sa.String(length=10), nullable=True),
    sa.Column('overall_status', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('env', sa.String(length=25), nullable=True),
    sa.Column('url', sa.String(length=300), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_session_id'), 'sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_table('ocr_results',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('paternal_name', sa.String(length=255), nullable=True),
    sa.Column('maternal_name', sa.String(length=255), nullable=True),
    sa.Column('name', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('address_fields', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('full_address', sa.Boolean(), nullable=True),
    sa.Column('invalid_address', sa.Boolean(), nullable=True),
    sa.Column('checked_address', sa.Text(), nullable=True),
    sa.Column('checked_address_bean', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('exterior_number', sa.String(length=255), nullable=True),
    sa.Column('type_of_id', sa.String(length=255), nullable=True),
    sa.Column('document_front_subtype', sa.String(length=255), nullable=True),
    sa.Column('document_back_subtype', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=25), nullable=True),
    sa.Column('clave_de_elector', sa.String(length=255), nullable=True),
    sa.Column('curp', sa.String(length=20), nullable=True),
    sa.Column('numero_emision_credencial', sa.String(length=255), nullable=True),
    sa.Column('cic', sa.String(length=255), nullable=True),
    sa.Column('ocr', sa.String(length=255), nullable=True),
    sa.Column('expire_at', sa.String(length=255), nullable=True),
    sa.Column('expiration_date', sa.Integer(), nullable=True),
    sa.Column('issue_date', sa.Integer(), nullable=True),
    sa.Column('registration_date', sa.Integer(), nullable=True),
    sa.Column('issuing_country', sa.String(length=255), nullable=True),
    sa.Column('nationality', sa.String(length=255), nullable=True),
    sa.Column('nationality_mrz', sa.String(length=255), nullable=True),
    sa.Column('not_extracted', sa.String(length=255), nullable=True),
    sa.Column('not_extracted_details', sqlalchemy_utils.types.scalar_list.ScalarListType(), nullable=True),
    sa.Column('mrz_1', sa.String(length=255), nullable=True),
    sa.Column('mrz_2', sa.String(length=255), nullable=True),
    sa.Column('mrz_3', sa.String(length=255), nullable=True),
    sa.Column('full_name_mrz', sa.String(length=255), nullable=True),
    sa.Column('documentNumberCheckDigit', sa.String(length=10), nullable=True),
    sa.Column('dateOfBirthCheckDigit', sa.String(length=10), nullable=True),
    sa.Column('expirationDateCheckDigit', sa.String(length=10), nullable=True),
    sa.Column('ocrDataConfidence', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scores',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('session_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('id_validation_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('curp_verification_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('id_ocr_confidence_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('retry_info', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.Column('overall_value', sa.String(length=10), nullable=True),
    sa.Column('overall_status', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['curp_verification_id'], ['curp_verifications.id'], ),
    sa.ForeignKeyConstraint(['id_ocr_confidence_id'], ['id_ocr_confidences.id'], ),
    sa.ForeignKeyConstraint(['id_validation_id'], ['id_validations.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scores_curp_verification_id'), 'scores', ['curp_verification_id'], unique=False)
    op.create_index(op.f('ix_scores_id_ocr_confidence_id'), 'scores', ['id_ocr_confidence_id'], unique=False)
    op.create_index(op.f('ix_scores_id_validation_id'), 'scores', ['id_validation_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scores')
    op.drop_table('ocr_results')
    op.drop_table('id_validations')
    op.drop_table('id_ocr_confidences')
    op.drop_table('curp_verifications')
    op.drop_table('sessions')
    # ### end Alembic commands ###
